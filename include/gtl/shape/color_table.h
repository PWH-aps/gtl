//////////////////////////////////////////////////////////////////////
//
// canvas.h:
//
// PWH
// 2017.07.20
// 2021.06.01 from Mocha
//
///////////////////////////////////////////////////////////////////////////////

#pragma once

namespace gtl::shape {

	constexpr static inline std::array<color_t, 256> const colorTable_s {{
		RGBA( (BYTE)(255*0),        (BYTE)(255*0),        (BYTE)(255*0) ),                        // unused
		RGBA( (BYTE)(255*1),        (BYTE)(255*0),        (BYTE)(255*0) ),                        // 1
		RGBA( (BYTE)(255*1),        (BYTE)(255*1),        (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*1),        (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*1),        (BYTE)(255*1) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0),        (BYTE)(255*1) ),        
		RGBA( (BYTE)(255*1),        (BYTE)(255*0),        (BYTE)(255*1) ),        
		RGBA( (BYTE)(255*1),        (BYTE)(255*1),        (BYTE)(255*1) ),                        // black or white
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*0.5),      (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0.75),     (BYTE)(255*0.75),     (BYTE)(255*0.75) ),        
		RGBA( (BYTE)(255*1),        (BYTE)(255*0),        (BYTE)(255*0) ),                        // 10
		RGBA( (BYTE)(255*1),        (BYTE)(255*0.5),      (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0.65),     (BYTE)(255*0),        (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.65),     (BYTE)(255*0.325),    (BYTE)(255*0.325) ),        
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*0),        (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*0.25),     (BYTE)(255*0.25) ),        
		RGBA( (BYTE)(255*0.3),      (BYTE)(255*0),        (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.3),      (BYTE)(255*0.15),     (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0),        (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0.075),    (BYTE)(255*0.075) ),        
		RGBA( (BYTE)(255*1),        (BYTE)(255*0.25),     (BYTE)(255*0) ),                     // 20
		RGBA( (BYTE)(255*1),        (BYTE)(255*0.625),    (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0.65),     (BYTE)(255*0.1625),   (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.65),     (BYTE)(255*0.4063),   (BYTE)(255*0.325) ),        
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*0.125),    (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*0.3125),   (BYTE)(255*0.25) ),        
		RGBA( (BYTE)(255*0.3),      (BYTE)(255*0.075),    (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.3),      (BYTE)(255*0.1875),   (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0.0375),   (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0.0938),   (BYTE)(255*0.075) ),        
		RGBA( (BYTE)(255*1),        (BYTE)(255*0.5),      (BYTE)(255*0) ),                      // 30
		RGBA( (BYTE)(255*1),        (BYTE)(255*0.75),     (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0.65),     (BYTE)(255*0.325),    (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.65),     (BYTE)(255*0.4875),   (BYTE)(255*0.325) ),        
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*0.25),     (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*0.375),    (BYTE)(255*0.25) ),        
		RGBA( (BYTE)(255*0.3),      (BYTE)(255*0.15),     (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.3),      (BYTE)(255*0.225),    (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0.075),    (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0.1125),   (BYTE)(255*0.075) ),        
		RGBA( (BYTE)(255*1),        (BYTE)(255*0.75),     (BYTE)(255*0) ),                     // 40
		RGBA( (BYTE)(255*1),        (BYTE)(255*0.875),    (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0.65),     (BYTE)(255*0.4875),   (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.65),     (BYTE)(255*0.5688),   (BYTE)(255*0.325) ),        
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*0.375),    (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*0.4375),   (BYTE)(255*0.25) ),        
		RGBA( (BYTE)(255*0.3),      (BYTE)(255*0.225),    (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.3),      (BYTE)(255*0.2625),   (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0.1125),   (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0.1313),   (BYTE)(255*0.075) ),        
		RGBA( (BYTE)(255*1),        (BYTE)(255*1),        (BYTE)(255*0) ),                        // 50
		RGBA( (BYTE)(255*1),        (BYTE)(255*1),        (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0.65),     (BYTE)(255*0.65),     (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.65),     (BYTE)(255*0.65),     (BYTE)(255*0.325) ),        
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*0.5),      (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*0.5),      (BYTE)(255*0.25) ),        
		RGBA( (BYTE)(255*0.3),      (BYTE)(255*0.3),      (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.3),      (BYTE)(255*0.3),      (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0.15),     (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0.15),     (BYTE)(255*0.075) ),        
		RGBA( (BYTE)(255*0.75),     (BYTE)(255*1),        (BYTE)(255*0) ),                     // 60
		RGBA( (BYTE)(255*0.875),    (BYTE)(255*1),        (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0.4875),   (BYTE)(255*0.65),     (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.5688),   (BYTE)(255*0.65),     (BYTE)(255*0.325) ),        
		RGBA( (BYTE)(255*0.375),    (BYTE)(255*0.5),      (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.4375),   (BYTE)(255*0.5),      (BYTE)(255*0.25) ),        
		RGBA( (BYTE)(255*0.225),    (BYTE)(255*0.3),      (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.2625),   (BYTE)(255*0.3),      (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*0.1125),   (BYTE)(255*0.15),     (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.1313),   (BYTE)(255*0.15),     (BYTE)(255*0.075) ),        
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*1),        (BYTE)(255*0) ),                      // 70
		RGBA( (BYTE)(255*0.75),     (BYTE)(255*1),        (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0.325),    (BYTE)(255*0.65),     (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.4875),   (BYTE)(255*0.65),     (BYTE)(255*0.325) ),        
		RGBA( (BYTE)(255*0.25),     (BYTE)(255*0.5),      (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.375),    (BYTE)(255*0.5),      (BYTE)(255*0.25) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0.3),      (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.225),    (BYTE)(255*0.3),      (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*0.075),    (BYTE)(255*0.15),     (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.1125),   (BYTE)(255*0.15),     (BYTE)(255*0.075) ),        
		RGBA( (BYTE)(255*0.25),     (BYTE)(255*1),        (BYTE)(255*0) ),                     // 80
		RGBA( (BYTE)(255*0.625),    (BYTE)(255*1),        (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0.1625),   (BYTE)(255*0.65),     (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.4063),   (BYTE)(255*0.65),     (BYTE)(255*0.325) ),        
		RGBA( (BYTE)(255*0.125),    (BYTE)(255*0.5),      (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.3125),   (BYTE)(255*0.5),      (BYTE)(255*0.25) ),        
		RGBA( (BYTE)(255*0.075),    (BYTE)(255*0.3),      (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.1875),   (BYTE)(255*0.3),      (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*0.0375),   (BYTE)(255*0.15),     (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.0938),   (BYTE)(255*0.15),     (BYTE)(255*0.075) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*1),        (BYTE)(255*0) ),                        // 90
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*1),        (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.65),     (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.325),    (BYTE)(255*0.65),     (BYTE)(255*0.325) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.5),      (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.25),     (BYTE)(255*0.5),      (BYTE)(255*0.25) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.3),      (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0.3),      (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.15),     (BYTE)(255*0) ),        
		RGBA( (BYTE)(255*0.075),    (BYTE)(255*0.15),     (BYTE)(255*0.075) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*1),        (BYTE)(255*0.25) ),                     // 100
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*1),        (BYTE)(255*0.625) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.65),     (BYTE)(255*0.1625) ),        
		RGBA( (BYTE)(255*0.325),    (BYTE)(255*0.65),     (BYTE)(255*0.4063) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.5),      (BYTE)(255*0.125) ),        
		RGBA( (BYTE)(255*0.25),     (BYTE)(255*0.5),      (BYTE)(255*0.3125) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.3),      (BYTE)(255*0.075) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0.3),      (BYTE)(255*0.1875) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.15),     (BYTE)(255*0.0375) ),        
		RGBA( (BYTE)(255*0.075),    (BYTE)(255*0.15),     (BYTE)(255*0.0938) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*1),        (BYTE)(255*0.5) ),                      // 110
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*1),        (BYTE)(255*0.75) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.65),     (BYTE)(255*0.325) ),        
		RGBA( (BYTE)(255*0.325),    (BYTE)(255*0.65),     (BYTE)(255*0.4875) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.5),      (BYTE)(255*0.25) ),        
		RGBA( (BYTE)(255*0.25),     (BYTE)(255*0.5),      (BYTE)(255*0.375) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.3),      (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0.3),      (BYTE)(255*0.225) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.15),     (BYTE)(255*0.075) ),        
		RGBA( (BYTE)(255*0.075),    (BYTE)(255*0.15),     (BYTE)(255*0.1125) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*1),        (BYTE)(255*0.75) ),                     // 120
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*1),        (BYTE)(255*0.875) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.65),     (BYTE)(255*0.4875) ),        
		RGBA( (BYTE)(255*0.325),    (BYTE)(255*0.65),     (BYTE)(255*0.5688) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.5),      (BYTE)(255*0.375) ),        
		RGBA( (BYTE)(255*0.25),     (BYTE)(255*0.5),      (BYTE)(255*0.4375) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.3),      (BYTE)(255*0.225) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0.3),      (BYTE)(255*0.2625) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.15),     (BYTE)(255*0.1125) ),        
		RGBA( (BYTE)(255*0.075),    (BYTE)(255*0.15),     (BYTE)(255*0.1313) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*1),        (BYTE)(255*1) ),                        // 130
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*1),        (BYTE)(255*1) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.65),     (BYTE)(255*0.65) ),        
		RGBA( (BYTE)(255*0.325),    (BYTE)(255*0.65),     (BYTE)(255*0.65) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.5),      (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0.25),     (BYTE)(255*0.5),      (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.3),      (BYTE)(255*0.3) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0.3),      (BYTE)(255*0.3) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.15),     (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*0.075),    (BYTE)(255*0.15),     (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.75),     (BYTE)(255*1) ),                     // 140
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*0.875),    (BYTE)(255*1) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.4875),   (BYTE)(255*0.65) ),        
		RGBA( (BYTE)(255*0.325),    (BYTE)(255*0.5688),   (BYTE)(255*0.65) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.375),    (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0.25),     (BYTE)(255*0.4375),   (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.225),    (BYTE)(255*0.3) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0.2625),   (BYTE)(255*0.3) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.1125),   (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*0.075),    (BYTE)(255*0.1313),   (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.5),      (BYTE)(255*1) ),                      // 150
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*0.75),     (BYTE)(255*1) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.325),    (BYTE)(255*0.65) ),        
		RGBA( (BYTE)(255*0.325),    (BYTE)(255*0.4875),   (BYTE)(255*0.65) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.25),     (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0.25),     (BYTE)(255*0.375),    (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.15),     (BYTE)(255*0.3) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0.225),    (BYTE)(255*0.3) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.075),    (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*0.075),    (BYTE)(255*0.1125),   (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.25),     (BYTE)(255*1) ),                     // 160
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*0.625),    (BYTE)(255*1) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.1625),   (BYTE)(255*0.65) ),        
		RGBA( (BYTE)(255*0.325),    (BYTE)(255*0.4063),   (BYTE)(255*0.65) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.125),    (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0.25),     (BYTE)(255*0.3125),   (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.075),    (BYTE)(255*0.3) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0.1875),   (BYTE)(255*0.3) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0.0375),   (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*0.075),    (BYTE)(255*0.0938),   (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0),        (BYTE)(255*1) ),                        // 170
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*0.5),      (BYTE)(255*1) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0),        (BYTE)(255*0.65) ),        
		RGBA( (BYTE)(255*0.325),    (BYTE)(255*0.325),    (BYTE)(255*0.65) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0),        (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0.25),     (BYTE)(255*0.25),     (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0),        (BYTE)(255*0.3) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0.15),     (BYTE)(255*0.3) ),        
		RGBA( (BYTE)(255*0),        (BYTE)(255*0),        (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*0.075),    (BYTE)(255*0.075),    (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*0.25),     (BYTE)(255*0),        (BYTE)(255*1) ),                     // 180
		RGBA( (BYTE)(255*0.625),    (BYTE)(255*0.5),      (BYTE)(255*1) ),        
		RGBA( (BYTE)(255*0.1625),   (BYTE)(255*0),        (BYTE)(255*0.65) ),        
		RGBA( (BYTE)(255*0.4063),   (BYTE)(255*0.325),    (BYTE)(255*0.65) ),        
		RGBA( (BYTE)(255*0.125),    (BYTE)(255*0),        (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0.3125),   (BYTE)(255*0.25),     (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0.075),    (BYTE)(255*0),        (BYTE)(255*0.3) ),        
		RGBA( (BYTE)(255*0.1875),   (BYTE)(255*0.15),     (BYTE)(255*0.3) ),        
		RGBA( (BYTE)(255*0.0375),   (BYTE)(255*0),        (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*0.0938),   (BYTE)(255*0.075),    (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*0),        (BYTE)(255*1) ),                      // 190
		RGBA( (BYTE)(255*0.75),     (BYTE)(255*0.5),      (BYTE)(255*1) ),        
		RGBA( (BYTE)(255*0.325),    (BYTE)(255*0),        (BYTE)(255*0.65) ),        
		RGBA( (BYTE)(255*0.4875),   (BYTE)(255*0.325),    (BYTE)(255*0.65) ),        
		RGBA( (BYTE)(255*0.25),     (BYTE)(255*0),        (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0.375),    (BYTE)(255*0.25),     (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0),        (BYTE)(255*0.3) ),        
		RGBA( (BYTE)(255*0.225),    (BYTE)(255*0.15),     (BYTE)(255*0.3) ),        
		RGBA( (BYTE)(255*0.075),    (BYTE)(255*0),        (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*0.1125),   (BYTE)(255*0.075),    (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*0.75),     (BYTE)(255*0),        (BYTE)(255*1) ),                     // 200
		RGBA( (BYTE)(255*0.875),    (BYTE)(255*0.5),      (BYTE)(255*1) ),        
		RGBA( (BYTE)(255*0.4875),   (BYTE)(255*0),        (BYTE)(255*0.65) ),        
		RGBA( (BYTE)(255*0.5688),   (BYTE)(255*0.325),    (BYTE)(255*0.65) ),        
		RGBA( (BYTE)(255*0.375),    (BYTE)(255*0),        (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0.4375),   (BYTE)(255*0.25),     (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0.225),    (BYTE)(255*0),        (BYTE)(255*0.3) ),        
		RGBA( (BYTE)(255*0.2625),   (BYTE)(255*0.15),     (BYTE)(255*0.3) ),        
		RGBA( (BYTE)(255*0.1125),   (BYTE)(255*0),        (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*0.1313),   (BYTE)(255*0.075),    (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*1),        (BYTE)(255*0),        (BYTE)(255*1) ),                        // 210
		RGBA( (BYTE)(255*1),        (BYTE)(255*0.5),      (BYTE)(255*1) ),        
		RGBA( (BYTE)(255*0.65),     (BYTE)(255*0),        (BYTE)(255*0.65) ),        
		RGBA( (BYTE)(255*0.65),     (BYTE)(255*0.325),    (BYTE)(255*0.65) ),        
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*0),        (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*0.25),     (BYTE)(255*0.5) ),        
		RGBA( (BYTE)(255*0.3),      (BYTE)(255*0),        (BYTE)(255*0.3) ),        
		RGBA( (BYTE)(255*0.3),      (BYTE)(255*0.15),     (BYTE)(255*0.3) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0),        (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0.075),    (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*1),        (BYTE)(255*0),        (BYTE)(255*0.75) ),                     // 220
		RGBA( (BYTE)(255*1),        (BYTE)(255*0.5),      (BYTE)(255*0.875) ),        
		RGBA( (BYTE)(255*0.65),     (BYTE)(255*0),        (BYTE)(255*0.4875) ),        
		RGBA( (BYTE)(255*0.65),     (BYTE)(255*0.325),    (BYTE)(255*0.5688) ),        
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*0),        (BYTE)(255*0.375) ),        
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*0.25),     (BYTE)(255*0.4375) ),        
		RGBA( (BYTE)(255*0.3),      (BYTE)(255*0),        (BYTE)(255*0.225) ),        
		RGBA( (BYTE)(255*0.3),      (BYTE)(255*0.15),     (BYTE)(255*0.2625) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0),        (BYTE)(255*0.1125) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0.075),    (BYTE)(255*0.1313) ),        
		RGBA( (BYTE)(255*1),        (BYTE)(255*0),        (BYTE)(255*0.5) ),                      // 230
		RGBA( (BYTE)(255*1),        (BYTE)(255*0.5),      (BYTE)(255*0.75) ),        
		RGBA( (BYTE)(255*0.65),     (BYTE)(255*0),        (BYTE)(255*0.325) ),        
		RGBA( (BYTE)(255*0.65),     (BYTE)(255*0.325),    (BYTE)(255*0.4875) ),        
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*0),        (BYTE)(255*0.25) ),        
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*0.25),     (BYTE)(255*0.375) ),        
		RGBA( (BYTE)(255*0.3),      (BYTE)(255*0),        (BYTE)(255*0.15) ),        
		RGBA( (BYTE)(255*0.3),      (BYTE)(255*0.15),     (BYTE)(255*0.225) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0),        (BYTE)(255*0.075) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0.075),    (BYTE)(255*0.1125) ),        
		RGBA( (BYTE)(255*1),        (BYTE)(255*0),        (BYTE)(255*0.25) ),                     // 240
		RGBA( (BYTE)(255*1),        (BYTE)(255*0.5),      (BYTE)(255*0.625) ),        
		RGBA( (BYTE)(255*0.65),     (BYTE)(255*0),        (BYTE)(255*0.1625) ),        
		RGBA( (BYTE)(255*0.65),     (BYTE)(255*0.325),    (BYTE)(255*0.4063) ),        
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*0),        (BYTE)(255*0.125) ),        
		RGBA( (BYTE)(255*0.5),      (BYTE)(255*0.25),     (BYTE)(255*0.3125) ),        
		RGBA( (BYTE)(255*0.3),      (BYTE)(255*0),        (BYTE)(255*0.075) ),        
		RGBA( (BYTE)(255*0.3),      (BYTE)(255*0.15),     (BYTE)(255*0.1875) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0),        (BYTE)(255*0.0375) ),        
		RGBA( (BYTE)(255*0.15),     (BYTE)(255*0.075),    (BYTE)(255*0.0938) ),        
		RGBA( (BYTE)(255*0.33),     (BYTE)(255*0.33),     (BYTE)(255*0.33) ),               // 250
		RGBA( (BYTE)(255*0.464),    (BYTE)(255*0.464),    (BYTE)(255*0.464) ),        
		RGBA( (BYTE)(255*0.598),    (BYTE)(255*0.598),    (BYTE)(255*0.598) ),        
		RGBA( (BYTE)(255*0.732),    (BYTE)(255*0.732),    (BYTE)(255*0.732) ),        
		RGBA( (BYTE)(255*0.866),    (BYTE)(255*0.866),    (BYTE)(255*0.866) ),        
		RGBA( (BYTE)(255*1),        (BYTE)(255*1),        (BYTE)(255*1) ),                 // 255
	}};

}	// namespace gtl::shape
